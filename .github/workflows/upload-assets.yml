name: Upload Artifact Release

on:
  workflow_call:
    inputs:
      latest-release-tag:
        description: "Tag name of the latest release"
        required: true
        type: string
 
jobs:
  upload-artifacts:
    name: "upload artifacts to release"
    runs-on: ubuntu-latest
    steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v3
          id: download
          with:
            name: test
            path: ./test
        - name: "Output New Tag"
          id: bumped-new-tag
          uses: actions/github-script@v6
          with:
            script: |
              const newTag = ${{steps.download.outputs.DownloadPath}};
              console.log(newTag)
        - name: "upload artifacts"
          uses: actions/github-script@v6
          with:
            script: |
              let latestRelease = await github.rest.repos.getLatestRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
              });
            
              await github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: latestRelease.data.id,
                name: 'test.zip',
                data: './test.zip',
                headers:{
                  'content-type': 'application/zip',
                },
                url: latestRelease.data.upload_url
              });
              
              let fs = require('fs');
              fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/test.zip`, Buffer.from('./test'));
              
#       - name: "upload artifacts"
#         uses: actions/github-script@v6
#         with:
#           script: |
#             console.log(process.env.GITHUB_RUN_ID)
            
#             let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
#                owner: context.repo.owner,
#                repo: context.repo.repo,
#                run_id: github.run_id,
#             });
            
#             let latestRelease = await github.rest.repos.getLatestRelease({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#             });
            
#             console.log(github.run_id)
#             console.log(allArtifacts)
            
#             for (const artifact of allArtifacts.data.artifacts)
#             {
#               let download = await github.rest.actions.downloadArtifact({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 artifact_id: artifact.id,
#                 archive_format: 'zip'
#               });

#               await github.rest.repos.uploadReleaseAsset({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 release_id: latestRelease.data.id,
#                 name: artifact.name + '.zip',
#                 data: download.data,
#                 headers:{
#                   'content-type': 'application/zip',
#                 },
#                 url: latestRelease.data.upload_url
#               });
              
#               let fs = require('fs');
#               fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/${artifact.name}.zip`, Buffer.from(download.data));
#             }
