name: Upload Artifact Release Call

on:
  workflow_call:
    inputs:
      latest-release-tag:
        description: "Tag name of the latest release"
        required: true
        type: string
    
jobs:
  upload-artifacts:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/download-artifact@v3
          id: download
          with:
            name: test
            path: ./test

        - name: 'Echo download path'
          run: echo ${{steps.download.outputs.download-path}}
        
        - name: zip folder
          run: zip test.zip ./test -r

        - name: "upload artifacts"
          uses: actions/github-script@v6
          with:
            script: |
              let latestRelease = await github.rest.repos.getLatestRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
              });
              let fs = require('fs');
              
              const messageBytes = Buffer.from('./test.zip');
              console.log(messageBytes)
              
              await github.rest.repos.uploadReleaseAsset({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: latestRelease.data.id,
                  name: 'test.zip',
                  file: fs.readFileSync('./test.zip'),
                  headers:{
                    'content-type': 'application/zip',
                  },
                  url: latestRelease.data.upload_url
              });
#         - name: Create Release
#           id: create_release
#           uses: actions/create-release@v1
#           env:
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           with:
#             tag_name: 'v1.0.11'
#             release_name: Release v1.0.11
#             draft: false
#             prerelease: false
            
#         - name: "output release"
#           uses: actions/github-script@v6
#           id: outputRelease
#           with:
#             script: |
#               let latestRelease = await github.rest.repos.getLatestRelease({
#                   owner: context.repo.owner,
#                   repo: context.repo.repo,
#               }); 
              
#               core.setOutput('releaseURL', latestRelease.data.upload_url)
#               console.log(latestRelease)
              
#         - name: zip folder
#           run: zip test.zip ./test -r
          
#         - name: upload artifact
#           uses: actions/upload-release-asset@v1
#           env:
#             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           with:
#             upload_url: ${{ steps.outputRelease.outputs.releaseURL }} 
#             asset_path: ./test.zip
#             asset_name: test.zip
#             asset_content_type: application/zip
            
#         - name: "upload artifacts"
#           uses: actions/github-script@v6
#           with:
#             script: |
#               let runId = ${{ github.run_id }}
#               console.log(runId)
              
#               let getWorkflowrun = await github.rest.actions.getWorkflowRun({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 run_id: runId
#               });
              
#               console.log(getWorkflowrun)
              
#               let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
#                owner: context.repo.owner,
#                repo: context.repo.repo,
#                run_id: runId
#               });
              
#               let getArtifactUrl = getWorkflowrun.data.artifacts_url
              
#               console.log(getArtifactUrl)
              
#               let getArt = await github.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts', {
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 run_id: runId,
#                 headers: {
#                   'X-GitHub-Api-Version': '2022-11-28'
#                 }
#               });
              
#               console.log(getArt)
              
#               let latestRelease = await github.rest.repos.getLatestRelease({
#                   owner: context.repo.owner,
#                   repo: context.repo.repo,
#               });
            
#               let fs = require('fs');
             
#               await github.rest.repos.uploadReleaseAsset({
#                 owner: context.repo.owner,
#                 repo: context.repo.repo,
#                 release_id: latestRelease.data.id,
#                 name: 'test.zip',
#                 data: 'test',
#                 headers:{
#                   'content-type': 'application/zip',
#                 },
#                 url: latestRelease.data.upload_url
#               });
              
              
