name: Branch Naming Policy

on:
  create:
  delete:
  pull_request:
    branches:
      - main

jobs:
  branch-naming-policy:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Source
        uses: actions/checkout@v3

      - name: Check Slash
        uses: actions/github-script@v6
        id: getSlashOutput
        with:
          script: |
            const branch_name = context.payload.ref
            let no_of_slash = (branch_name.split('/').length - 1)
            let app_name = branch_name.substring(0, branch_name.indexOf('/'));
            
            core.setOutput('slashOutput', no_of_slash)
            core.setOutput('appName', app_name)
      
      - name: Check App Name
        uses: actions/github-script@v6
        if: ${{ steps.getSlashOutput.outputs.slashOutput > 1 }} 
        id: applist
        with:
          script: |
            const fs = require('fs');
            const path = './.github/APPOWNERS';
            var app_owners = {};
            await fs.readFileSync(path).toString().split("\n")
              .forEach((el) => {
                if (!el.startsWith("#") && el.trim() != "") {
                  let result = el.trim().split(/\s+/);
                  app_owners[result[0]] = result.splice(1, result.length).join();
                }
              });
            core.setOutput('applist_output', Object.keys(app_owners).toString());
          
      - name: Run Branch Naming Policy Action
        uses: Ring910/branch-naming@v1
        if: (github.ref_type == 'branch' || github.ref_type == 'pull_request')
        with:
          regex: '^${{ steps.getSlashOutput.outputs.appName }}/(feature|bugfix|hotfix)\/.*'
          token: ${{ secrets.REPO_TOKEN }}
          app-name: ${{ steps.getSlashOutput.outputs.appName }}
          app-name-list: ${{ steps.applist.outputs.applist_output }}
          
