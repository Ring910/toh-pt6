name: Branch Naming Policy

on:
  workflow_call:
    inputs:
      app-name:
        description: "Name of the application"
        required: true
        type: string

jobs:
  branch-naming-policy:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch Source
        uses: actions/checkout@v3

      - name: Check Slash
        uses: actions/github-script@v6
        with:
          script: |
            console.log(context.payload.ref)
        
      - name: Check App Name
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.REPO_TOKEN }}
          script: |
            const fs = require('fs');
            const path = './.github/APPOWNERS';
            var app_owners = {};
            await fs.readFileSync(path).toString().split("\n")
              .forEach((el) => {
                if (!el.startsWith("#") && el.trim() != "") {
                  let result = el.trim().split(/\s+/);
                  app_owners[result[0]] = result.splice(1, result.length).join();
                }
              });

            var checkExist = Object.keys(app_owners).some((name) => name == '${{inputs.app-name}}');

            if(!checkExist){
              core.setFailed("The application name is not exist.")
              github.rest.issues.addLabels({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: [ 'Invalid App Name' ]
              })
            }

      - name: Run Branch Naming Policy Action
        uses: Ring910/branch-naming@v1
        if: (github.ref_type == 'branch' || github.ref_type == 'pull_request') && success()
        with:
          regex: '^${{inputs.app-name}}/(feature|bugfix|hotfix)\/.*'
          app-name: ${{ inputs.app-name }}

      - name: Remove Invalid App Name Label
        uses: actions/github-script@v6
        if: contains(github.event.pull_request.labels.*.name, 'Invalid App Name') && success()
        with:
          github-token: ${{ secrets.REPO_TOKEN }}
          script: |
            github.rest.issues.removeLabel({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'Invalid App Name'
            })
